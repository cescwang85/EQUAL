library(EQUAL)
set.seed(123)
library('MASS')
library('Rcpp')
library('Matrix')
library('EQUAL')
n=50
p=100
Omega<-diag(p);
for (i in 1:p) {
for (j in 1:p) {if (abs(i-j)<5 &&(i!=j)) {Omega[i,j]=0.2}}
}
X=mvrnorm(n,rep(0,p),solve(Omega))
aa<-EQUAL(X)
bb<-EQUAL(X,type=FALSE);
install.packages("MASS")
install.packages("Rcpp")
install.packages("RcppArmadillo")
install.packages("Matrix")
install.packages("devtools")
library("devtools")
devtools::install_github("cescwang85/EQUAL")
rm(list = ls())
set.seed(123)
library('MASS')
library('Rcpp')
library('Matrix')
library('EQUAL')
n=50
p=100
Omega<-diag(p);
for (i in 1:p) {
for (j in 1:p) {if (abs(i-j)<5 &&(i!=j)) {Omega[i,j]=0.2}}
}
X=mvrnorm(n,rep(0,p),solve(Omega))
aa<-EQUAL(X)
bb<-EQUAL(X,type=FALSE);
lambda<-aa$lambda;
nlambda<-length(lambda);
re<-lambda;
for (k in 1:nlambda)
{re[k]=norm(aa$Omega[[k]]-Omega,type='F')}
plot(lambda,re,type='o')
install.packages("Matrix")
aa<-EQUAL(X)
bb<-EQUAL(X,type=FALSE);
lambda<-aa$lambda;
nlambda<-length(lambda);
re<-lambda;
for (k in 1:nlambda)
{re[k]=norm(aa$Omega[[k]]-Omega,type='F')}
plot(lambda,re,type='o')
lambda<-aa$lambda;
nlambda<-length(lambda);
re<-lambda;
for (k in 1:nlambda)
{re[k]=norm(bb$Omega[[k]]-Omega,type='F')}
plot(lambda,re,type='o')
re
rm(list = ls())
set.seed(123)
library('MASS')
library('Rcpp')
library('Matrix')
library('EQUAL')
n=50
p=100
Omega<-diag(p);
for (i in 1:p) {
for (j in 1:p) {if (abs(i-j)<5 &&(i!=j)) {Omega[i,j]=0.2}}
}
X=mvrnorm(n,rep(0,p),solve(Omega))
aa<-EQUAL(X)
bb<-EQUAL(X,type=FALSE);
lambda<-aa$lambda;
nlambda<-length(lambda);
re<-lambda;
for (k in 1:nlambda)
{re[k]=norm(aa$Omega[[k]]-Omega,type='F')}
plot(lambda,re,type='o')
library(EQUAL)
install.packages('roxygen')
install.packages('roxygen2')
library(EQUAL)
?equal1
library(EQUAL)
?equal1
?soft
library(EQUAL)
?equal1
?soft
?equal2
library(EQUAL)
?equal2
library(EQUAL)
install.packages(c("codetools", "KernSmooth", "magrittr", "nlme", "rlang"))
