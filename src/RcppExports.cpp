// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// soft
arma::mat soft(arma::mat A, double a, int diag);
RcppExport SEXP _EQUAL_soft(SEXP ASEXP, SEXP aSEXP, SEXP diagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type A(ASEXP);
    Rcpp::traits::input_parameter< double >::type a(aSEXP);
    Rcpp::traits::input_parameter< int >::type diag(diagSEXP);
    rcpp_result_gen = Rcpp::wrap(soft(A, a, diag));
    return rcpp_result_gen;
END_RCPP
}
// equal1
Rcpp::List equal1(arma::mat X, arma::vec lambda, double err, int maxIter, double rho, int diag);
RcppExport SEXP _EQUAL_equal1(SEXP XSEXP, SEXP lambdaSEXP, SEXP errSEXP, SEXP maxIterSEXP, SEXP rhoSEXP, SEXP diagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type diag(diagSEXP);
    rcpp_result_gen = Rcpp::wrap(equal1(X, lambda, err, maxIter, rho, diag));
    return rcpp_result_gen;
END_RCPP
}
// equal2
Rcpp::List equal2(arma::mat X, arma::vec lambda, double err, int maxIter, double rho, int diag);
RcppExport SEXP _EQUAL_equal2(SEXP XSEXP, SEXP lambdaSEXP, SEXP errSEXP, SEXP maxIterSEXP, SEXP rhoSEXP, SEXP diagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda(lambdaSEXP);
    Rcpp::traits::input_parameter< double >::type err(errSEXP);
    Rcpp::traits::input_parameter< int >::type maxIter(maxIterSEXP);
    Rcpp::traits::input_parameter< double >::type rho(rhoSEXP);
    Rcpp::traits::input_parameter< int >::type diag(diagSEXP);
    rcpp_result_gen = Rcpp::wrap(equal2(X, lambda, err, maxIter, rho, diag));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_EQUAL_soft", (DL_FUNC) &_EQUAL_soft, 3},
    {"_EQUAL_equal1", (DL_FUNC) &_EQUAL_equal1, 6},
    {"_EQUAL_equal2", (DL_FUNC) &_EQUAL_equal2, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_EQUAL(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
